<!-- ##### SECTION Title ##### -->


<!-- ##### SECTION Short_Description ##### -->


<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT SbuildChroot ##### -->
<para>
SbuildChroot object.
</para>


<!-- ##### ARG SbuildChroot:active ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:aliases ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:description ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:groups ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:mount-device ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:mount-location ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:name ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:priority ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:root-groups ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:run-session-scripts ##### -->
<para>

</para>

<!-- ##### ARG SbuildChroot:run-setup-scripts ##### -->
<para>

</para>

<!-- ##### STRUCT SbuildChrootClass ##### -->
<para>
SbuildChroot class.
</para>

@parent: the parent class
@print_details: vfunc to print additional chroot details
@print_config: vfunc to print the config file group for this chroot
@setup_env: vfunc to set the environment that the setup scripts will see during execution
@get_chroot_type: vfunc to get the user visible chroot type name
@setup_lock: vfunc to lock a chroot during setup
@get_session_flags: vfunc to get the session flags for this chroot type

<!-- ##### USER_FUNCTION SbuildChrootPrintDetailsFunc ##### -->
<para>
Print detailed information about @chroot to @file.  The information
is printed in plain text with one line per property.  This should
print additional detail in derived #SbuildChroot classes.
</para>

@chroot: an #SbuildChroot
@file: the file to output to.


<!-- ##### USER_FUNCTION SbuildChrootGetChrootTypeFunc ##### -->
<para>
This function is used to get the name of the chroot type subclassed
from this type.  This is a user-friendly form of the registered type
name of the class, for use in messages and configuration files.
</para>

@chroot: an #SbuildChroot
@Returns: the type name


<!-- ##### USER_FUNCTION SbuildChrootGetSessionFlagsFunc ##### -->
<para>
This function is used to get the session flags of the chroot. These
determine how the #SbuildSession controlling the chroot will operate.
</para>

@chroot: an #SbuildChroot
@Returns: the #SbuildChrootSessionFlags


<!-- ##### USER_FUNCTION SbuildChrootPrintConfigFunc ##### -->
<para>
Print the configuration group for a chroot in the format required
by schroot.conf.
</para>

@chroot: an #SbuildChroot.
@file: the file to output to.


<!-- ##### USER_FUNCTION SbuildChrootSetupEnvFunc ##### -->
<para>
This function is used to set the environment that the setup scripts
will see during execution.  Environment variables should be added to
@env as "key=value" strings (the format expected by execve envp).
These strings should be allocated with g_free (or related allocation
functions such as g_strdup), and they must not be freed.
</para>

@chroot: an #SbuildChroot.
@env: the environment to set.


<!-- ##### USER_FUNCTION SbuildChrootSetupLockFunc ##### -->
<para>
Lock a chroot during setup.  The locking technique (if any) may vary
depending upon the chroot type and setup stage.  For example, during
creation a block device might require locking, but afterwards this
will change to the new block device or directory.
</para>

@chroot: an #SbuildChroot.
@type: the type of setup being performed
@lock: TRUE to lock, FALSE to unlock
@error: a #GError
@Returns: TRUE on success, FALSE on failure


<!-- ##### ENUM SbuildChrootSessionFlags ##### -->
<para>
The session options for a given chroot type
</para>

@SBUILD_CHROOT_SESSION_CREATE: The session persists once schroot
terminates, so a session file must be created.

<!-- ##### ENUM SbuildChrootSetupType ##### -->
<para>
The type of chroot setup operation
</para>

@SBUILD_CHROOT_SETUP_START: Set up a new chroot, preparing it for use
@SBUILD_CHROOT_SETUP_RECOVER: Recover an existing, but inactive, chroot
@SBUILD_CHROOT_SETUP_STOP: Clean up an existing chroot, possibly deleting it
@SBUILD_CHROOT_RUN_START: Start running a command in an existing chroot
@SBUILD_CHROOT_RUN_STOP: Stop running a command in an existing chroot

<!-- ##### ENUM SbuildChrootError ##### -->
<para>
The errors which can occur during chroot operations.
</para>

@SBUILD_CHROOT_ERROR_LOCK: A locking operation failed.

<!-- ##### MACRO SBUILD_CHROOT_ERROR ##### -->
<para>
The error domain for sbuild chroot errors.
</para>



<!-- ##### FUNCTION sbuild_chroot_new ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION sbuild_chroot_new_from_keyfile ##### -->
<para>

</para>

@keyfile: 
@group: 
@Returns: 
<!-- # Unused Parameters # -->
@active: 


<!-- ##### FUNCTION sbuild_chroot_set_properties_from_keyfile ##### -->
<para>

</para>

@chroot: 
@keyfile: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_get_name ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_name ##### -->
<para>

</para>

@chroot: 
@name: 


<!-- ##### FUNCTION sbuild_chroot_get_description ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_description ##### -->
<para>

</para>

@chroot: 
@description: 


<!-- ##### FUNCTION sbuild_chroot_get_priority ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_priority ##### -->
<para>

</para>

@chroot: 
@priority: 


<!-- ##### FUNCTION sbuild_chroot_get_groups ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_groups ##### -->
<para>

</para>

@chroot: 
@groups: 


<!-- ##### FUNCTION sbuild_chroot_get_root_groups ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_root_groups ##### -->
<para>

</para>

@chroot: 
@groups: 


<!-- ##### FUNCTION sbuild_chroot_get_aliases ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_aliases ##### -->
<para>

</para>

@chroot: 
@aliases: 


<!-- ##### FUNCTION sbuild_chroot_get_active ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_active ##### -->
<para>

</para>

@chroot: 
@active: 


<!-- ##### FUNCTION sbuild_chroot_get_run_setup_scripts ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_run_setup_scripts ##### -->
<para>

</para>

@chroot: 
@run_setup_scripts: 


<!-- ##### FUNCTION sbuild_chroot_get_run_session_scripts ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_run_session_scripts ##### -->
<para>

</para>

@chroot: 
@run_session_scripts: 


<!-- ##### FUNCTION sbuild_chroot_get_mount_location ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_mount_location ##### -->
<para>

</para>

@chroot: 
@location: 


<!-- ##### FUNCTION sbuild_chroot_get_mount_device ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_set_mount_device ##### -->
<para>

</para>

@chroot: 
@device: 


<!-- ##### FUNCTION sbuild_chroot_print_details ##### -->
<para>

</para>

@chroot: 
@file: 


<!-- ##### FUNCTION sbuild_chroot_print_config ##### -->
<para>

</para>

@chroot: 
@file: 


<!-- ##### FUNCTION sbuild_chroot_get_chroot_type ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_get_session_flags ##### -->
<para>

</para>

@chroot: 
@Returns: 


<!-- ##### FUNCTION sbuild_chroot_setup_env ##### -->
<para>

</para>

@chroot: 
@env: 


<!-- ##### FUNCTION sbuild_chroot_setup_lock ##### -->
<para>

</para>

@chroot: 
@type: 
@lock: 
@error: 
@Returns: 


