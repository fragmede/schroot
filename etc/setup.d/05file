#!/bin/sh
# Copyright Â© 2005-2007  Roger Leigh <rleigh@debian.org>
#
# schroot is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# schroot is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
#####################################################################

set -e

if [ -f "$CHROOT_SCRIPT_CONFIG" ]; then
    . "$CHROOT_SCRIPT_CONFIG"
elif [ "$2" = "ok" ]; then
    echo "script-config file '$CHROOT_SCRIPT_CONFIG' does not exist"
    exit 1
fi

# Check file type
check_filetype()
{
    if echo "$CHROOT_FILE" | grep -q '\.tar$'; then
	filetype="tar"
    elif echo "$CHROOT_FILE" | egrep -q '(\.tar\.gz|\.tgz)$'; then
	filetype="tgz"
    elif echo "$CHROOT_FILE" | egrep -q '(\.tar\.bz2|\.tbz)$'; then
	filetype="tbz"
    elif echo "$CHROOT_FILE" | grep -q '\.zip$'; then
	filetype="zip"
    else
	echo "Unsupported filetype for $CHROOT_FILE"
	exit 1
    fi
}

# Unpack archive
unpack_file()
{
    if [ "$filetype" = "tar" ]; then
	tar $TAR_VERBOSE -xf "$CHROOT_FILE"
    elif [ "$filetype" = "tgz" ]; then
	tar $TAR_VERBOSE -xzf "$CHROOT_FILE"
    elif [ "$filetype" = "tbz" ]; then
	tar $TAR_VERBOSE -xjf "$CHROOT_FILE"
    elif [ "$filetype" = "zip" ]; then
	unzip $ZIP_VERBOSE "$CHROOT_FILE"
    else
	echo "Unsupported filetype for $CHROOT_FILE"
	exit 1
    fi
}

# Repack archive
repack_file()
{
    NEWFILE=`mktemp "${CHROOT_FILE}.XXXXXX"`

    trap "if [ -f \"$NEWFILE\" ]; then rm -f \"$NEWFILE\"; fi" 0

    if [ "$filetype" = "tar" ]; then
	tar $TAR_VERBOSE -cf "$NEWFILE" .
    elif [ "$filetype" = "tgz" ]; then
	tar $TAR_VERBOSE -czf "$NEWFILE" .
    elif [ "$filetype" = "tbz" ]; then
	tar $TAR_VERBOSE -cjf "$NEWFILE" .
    elif [ "$filetype" = "zip" ]; then
	zip $ZIP_VERBOSE -r "$NEWFILE" .
    else
	echo "Unsupported filetype for $CHROOT_FILE"
	exit 1
    fi

    chown --reference="$CHROOT_FILE" "$NEWFILE"
    chmod --reference="$CHROOT_FILE" "$NEWFILE"
    mv "$NEWFILE" "$CHROOT_FILE"

    trap "" 0
}

if [ "$VERBOSE" = "verbose" ]; then
    TAR_VERBOSE="-v"
else
    ZIP_VERBOSE="-q"
fi

if [ "$CHROOT_TYPE" = "file" ]; then

    check_filetype

    UNPACK_LOCATION="${CHROOT_FILE_UNPACK_DIR}/${SESSION_ID}"

    if [ $1 = "setup-start" ]; then

	if [ "$VERBOSE" = "verbose" ]; then
	    echo "File unpack directory: $UNPACK_LOCATION"
	fi
        if [ ! -d "$UNPACK_LOCATION" ]; then
	    mkdir -p "$UNPACK_LOCATION"
	    if [ "$VERBOSE" = "verbose" ]; then
		echo "Created file unpack directory: $UNPACK_LOCATION"
	    fi
        fi
	cd "$UNPACK_LOCATION"
	if [ "$VERBOSE" = "verbose" ]; then
	    echo "Changed CWD to $UNPACK_LOCATION"
	fi

	unpack_file

    elif [ "$1" = "setup-stop" ]; then

	if [ "$2" = "ok" ] && [ "$CHROOT_FILE_REPACK" = "true" ]; then
	    cd "$UNPACK_LOCATION" && repack_file
	fi

	if [ "$CHROOT_SESSION_PURGE" = "true" ]; then
	    if [ "$VERBOSE" = "verbose" ]; then
		echo "Purging $UNPACK_LOCATION"
	    fi
	    if [ -d "$UNPACK_LOCATION" ]; then
		rm -rf "$UNPACK_LOCATION"
	    fi
	fi

    fi

fi

