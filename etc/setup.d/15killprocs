#!/bin/sh
# Copyright © 2007       Kees Cook <kees@outflux.net>
# Copyright © 2007-2009  Roger Leigh <rleigh@debian.org>
#
# schroot is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# schroot is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
#####################################################################

set -e

. "$SETUP_DATA_DIR/common-data"
. "$SETUP_DATA_DIR/common-functions"

if [ -f "$CHROOT_SCRIPT_CONFIG" ]; then
    . "$CHROOT_SCRIPT_CONFIG"
elif [ "$STATUS" = "ok" ]; then
    fatal "script-config file '$CHROOT_SCRIPT_CONFIG' does not exist"
fi

# Kill all processes that were run from within the chroot environment
# $1: mount base location
do_kill_all()
{
    if [ -z "$1" ]; then
	fatal "No path for finding stray processes: not reaping processes in chroot"
    fi

    info "Killing processes run inside $1"
    ls /proc | egrep '^[[:digit:]]+$' |
    while read pid; do
        root=$(readlink /proc/"$pid"/root || true)
        if [ "$root" = "$1" ]; then
            exe=$(readlink /proc/"$pid"/exe || true)
            info "Killing left-over pid $pid (${exe##$1})"
            info "  Sending SIGTERM to pid $pid"

            /bin/kill -TERM "$pid" 2>/dev/null

            count=0
            max=5
            while [ -d /proc/"$pid" ]; do
                count=$(( $count + 1 ))
                info "  Waiting for pid $pid to shut down... ($count/$max)"
                sleep 1
                # Wait for $max seconds for process to die before -9'ing it
                if [ "$count" -eq "$max" ]; then
                    info "  Sending SIGKILL to pid $pid"
                    /bin/kill -KILL "$pid" 2>/dev/null
                    sleep 1
                    break
                fi
            done
        fi
    done
}

if [ $STAGE = "setup-recover" ] || [ $STAGE = "setup-stop" ]; then
    do_kill_all "$CHROOT_MOUNT_LOCATION"
fi